package me.rafaelldi.aspire.run

import com.intellij.execution.RunManager
import com.intellij.execution.RunnerAndConfigurationSettings
import com.intellij.execution.configurations.ConfigurationTypeBase
import com.intellij.openapi.project.Project
import com.jetbrains.rd.util.lifetime.Lifetime
import com.jetbrains.rider.model.RunnableProject
import com.jetbrains.rider.model.RunnableProjectKind
import com.jetbrains.rider.run.AutoGeneratedRunConfigurationManager
import com.jetbrains.rider.run.configurations.IRunConfigurationWithDefault
import com.jetbrains.rider.run.configurations.IRunnableProjectConfigurationType
import com.jetbrains.rider.run.configurations.RunConfigurationHelper.hasConfigurationForNameAndTypeId
import me.rafaelldi.aspire.AspireIcons

class AspireHostConfigurationType : ConfigurationTypeBase(
    "AspireHostConfiguration",
    "Aspire Host",
    "Aspire Host configuration",
    AspireIcons.RunConfig
), IRunnableProjectConfigurationType, IRunConfigurationWithDefault {

    private val factory = AspireHostConfigurationFactory(this)

    init {
        addFactory(factory)
    }

    override fun isApplicable(kind: RunnableProjectKind) = kind == AspireRunnableProjectKinds.AspireHost

    override fun tryCreateDefault(
        project: Project,
        lifetime: Lifetime,
        projects: List<RunnableProject>,
        autoGeneratedRunConfigurationManager: AutoGeneratedRunConfigurationManager,
        runManager: RunManager
    ): List<Pair<RunnableProject, RunnerAndConfigurationSettings>> {
        val applicableProjects = projects.filter {
            isApplicable(it.kind)
                    && !runManager.hasConfigurationForNameAndTypeId(it.name, this.id)
                    && !autoGeneratedRunConfigurationManager.hasRunConfigurationEverBeenGenerated(
                it.projectFilePath,
                it.kind
            )
        }

        return applicableProjects.map {
            val defaultSettings = runManager.createConfiguration(it.name, factory).apply {
                (configuration as AspireHostConfiguration).parameters.setUpFromRunnableProject(it)
            }
            runManager.addConfiguration(defaultSettings)
            autoGeneratedRunConfigurationManager.markProjectAsAutoGenerated(it.projectFilePath, it.kind)
            it to defaultSettings
        }
    }

    override fun getHelpTopic() = "me.rafaelldi.aspire.run-config"
}